package rs;


import java.sql.Date;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Calendar;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Kelvin Ngure
 */
public class RoomSchedulerFrame extends javax.swing.JFrame {

    /**
     * Creates new form RoomSchedulerFrame
     */
    public RoomSchedulerFrame() {
        initComponents();
        
        runFacultyComboBoxes();
        runDateComboBoxes();
        runRoomComboBoxes();
        statusReservation.setVisible(false);
        statusWaitlist.setVisible(false);
    }

    public void runFacultyComboBoxes() {
        nameReserveCombo.setModel(new javax.swing.DefaultComboBoxModel(Faculty.getFacultyList().toArray()));
        cancelNameCombo.setModel(new javax.swing.DefaultComboBoxModel(Faculty.getFacultyList().toArray()));
        checkByCombo.setModel(new javax.swing.DefaultComboBoxModel(Faculty.getFacultyList().toArray()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        waitlistPanel = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        addFaculty = new javax.swing.JTextField();
        addFacultyButton = new javax.swing.JButton();
        addFacultyStatusLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        roomNo = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        seatsNo = new javax.swing.JTextField();
        addRoomButton = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        addDate = new javax.swing.JTextField();
        cancelReserveButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        addDropStatus = new javax.swing.JTextArea();
        jLabel18 = new javax.swing.JLabel();
        cancelNameCombo = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        cancelDateCombo = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        dropRoomCombo = new javax.swing.JComboBox<>();
        dropRoomButton = new javax.swing.JButton();
        addDateButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        nameReserveCombo = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        dateReserveCombo = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        seatsReserveField = new javax.swing.JTextField();
        submitReservationButton = new javax.swing.JButton();
        reserveStatusLabel = new javax.swing.JLabel();
        reserveRoomStatusLabel = new javax.swing.JTextField();
        waitlistCheck = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        statusWaitlist = new javax.swing.JTextArea();
        reservationStatusDateJLabel = new javax.swing.JLabel();
        dateCheckCombo = new javax.swing.JComboBox<>();
        dateCheck = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        statusReservation = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        checkByButton = new javax.swing.JButton();
        checkByCombo = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        checkStatusByText = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 102, 255));

        jLabel1.setFont(new java.awt.Font("Haettenschweiler", 0, 36)); // NOI18N
        jLabel1.setText("Room Scheduler");

        waitlistPanel.setBackground(new java.awt.Color(51, 153, 255));

        jPanel1.setForeground(new java.awt.Color(240, 240, 240));

        jLabel2.setText("Faculty Name: ");

        addFaculty.setColumns(20);
        addFaculty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFacultyActionPerformed(evt);
            }
        });

        addFacultyButton.setText("Submit");
        addFacultyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFacultyButtonActionPerformed(evt);
            }
        });

        addFacultyStatusLabel.setText("    ");

        jLabel7.setText("   ");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setText("ADD FACULTY");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setText("ADD DATES");

        jLabel12.setText("Room Number: ");

        roomNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomNoActionPerformed(evt);
            }
        });

        jLabel13.setText("Number of seats: ");

        addRoomButton.setText("Submit");
        addRoomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRoomButtonActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel14.setText("ADD ROOM ");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel15.setText("DROP ROOM");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel16.setText("CANCEL RESERVATION");

        jLabel17.setText("Date: ");

        addDate.setText("Format: YYYY-MM-DD");
        addDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDateActionPerformed(evt);
            }
        });

        cancelReserveButton.setText("Submit");
        cancelReserveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelReserveButtonActionPerformed(evt);
            }
        });

        addDropStatus.setColumns(20);
        addDropStatus.setRows(5);
        jScrollPane3.setViewportView(addDropStatus);

        jLabel18.setText("Name: ");

        cancelNameCombo.setForeground(new java.awt.Color(255, 255, 51));
        cancelNameCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelNameComboActionPerformed(evt);
            }
        });

        jLabel19.setText("Date: ");

        jLabel20.setText("Room Number: ");

        dropRoomCombo.setForeground(new java.awt.Color(255, 255, 51));
        dropRoomCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropRoomComboActionPerformed(evt);
            }
        });

        dropRoomButton.setText("Submit");
        dropRoomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropRoomButtonActionPerformed(evt);
            }
        });

        addDateButton.setText("Submit");
        addDateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addFacultyButton)
                    .addComponent(jLabel11)
                    .addComponent(jLabel16)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addFaculty, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel10)
                    .addComponent(jLabel15)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cancelNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cancelDateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dropRoomCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addFacultyStatusLabel))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel20)
                                        .addGap(18, 18, 18)
                                        .addComponent(roomNo, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(seatsNo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(addRoomButton)
                                .addGap(63, 63, 63)
                                .addComponent(jLabel7))
                            .addComponent(addDateButton)
                            .addComponent(cancelReserveButton)
                            .addComponent(dropRoomButton))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(4, 4, 4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(addFaculty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(addFacultyButton)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(addFacultyStatusLabel))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jLabel14)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(roomNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel20))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel13)
                                    .addComponent(seatsNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(24, 24, 24))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(addRoomButton)
                                .addGap(39, 39, 39)))
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(addDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addDateButton))
                        .addGap(23, 23, 23)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(cancelNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)
                            .addComponent(cancelDateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cancelReserveButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(dropRoomCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dropRoomButton))
                        .addGap(72, 72, 72))))
        );

        waitlistPanel.addTab("Add / drop", jPanel1);

        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        jLabel4.setText("Name");

        nameReserveCombo.setForeground(new java.awt.Color(255, 255, 51));
        nameReserveCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameReserveComboActionPerformed(evt);
            }
        });

        jLabel5.setText("Date: ");

        dateReserveCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateReserveComboActionPerformed(evt);
            }
        });

        jLabel6.setText("Seats: ");

        seatsReserveField.setColumns(3);

        submitReservationButton.setText("Submit");
        submitReservationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitReservationButtonActionPerformed(evt);
            }
        });

        reserveStatusLabel.setText("   ");

        waitlistCheck.setText("Check");
        waitlistCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waitlistCheckActionPerformed(evt);
            }
        });

        statusWaitlist.setColumns(20);
        statusWaitlist.setRows(5);
        jScrollPane1.setViewportView(statusWaitlist);

        reservationStatusDateJLabel.setText("Date: ");

        dateCheckCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        dateCheck.setText("Check");
        dateCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateCheckActionPerformed(evt);
            }
        });

        statusReservation.setColumns(20);
        statusReservation.setRows(5);
        jScrollPane2.setViewportView(statusReservation);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("MAKE RESERVATION");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("CHECK AVAILABILITY");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("CHECK WAITLIST");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateCheck)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(reservationStatusDateJLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dateCheckCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(waitlistCheck)
                                .addGap(339, 339, 339)
                                .addComponent(reserveStatusLabel))
                            .addComponent(jLabel9)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel3)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameReserveCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dateReserveCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatsReserveField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(submitReservationButton))
                    .addComponent(reserveRoomStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(nameReserveCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(dateReserveCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(seatsReserveField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(submitReservationButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reserveRoomStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dateCheck)
                            .addComponent(waitlistCheck))
                        .addGap(18, 18, 18))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(reserveStatusLabel))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(reservationStatusDateJLabel)
                                    .addComponent(dateCheckCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(46, 46, 46)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        waitlistPanel.addTab("Reserve Room", jPanel2);

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel21.setText("CHECK STATUS BY FACULTY ");

        jLabel22.setText("Name: ");

        checkByButton.setText("Check");
        checkByButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkByButtonActionPerformed(evt);
            }
        });

        checkByCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        checkStatusByText.setColumns(20);
        checkStatusByText.setRows(5);
        jScrollPane4.setViewportView(checkStatusByText);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel21)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(checkByCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(checkByButton)))
                        .addGap(0, 397, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(checkByButton)
                    .addComponent(checkByCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
                .addContainerGap())
        );

        waitlistPanel.addTab("Status", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(323, 323, 323)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(77, Short.MAX_VALUE)
                .addComponent(waitlistPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 687, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(25, 25, 25)
                .addComponent(waitlistPanel)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dateCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateCheckActionPerformed
        statusReservation.setVisible(true);
        Date date = Date.valueOf(dateCheckCombo.getSelectedItem().toString());
        ArrayList<Reservations> reservation = ReservationsMethods.getReservationsByDate(date);
        String display = "Faculty\tRoom\tDate\tSeats\n";
        display = reservation.stream().map((r) -> r.getFaculty()+"\t"+r.getRoom()+"\t"+r.getDate()+"\t"+r.getSeats()+"\n").reduce(display, String::concat);
        statusReservation.setText(display);
    }//GEN-LAST:event_dateCheckActionPerformed

    private void waitlistCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waitlistCheckActionPerformed
        statusWaitlist.setVisible(true);
        ArrayList<Waitlist> waitlist = WaitlistMethods.getWaitlist();
        String display = "Faculty\tDate\tSeats\n";
        display = waitlist.stream().map((w) -> w.getFaculty()+"\t"+w.getDate()+"\t"+w.getSeats()+"\n").reduce(display, String::concat);
        statusWaitlist.setText(display);
    }//GEN-LAST:event_waitlistCheckActionPerformed

    private void submitReservationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitReservationButtonActionPerformed
        String faculty = nameReserveCombo.getSelectedItem().toString();
        Date date = Date.valueOf(dateReserveCombo.getSelectedItem().toString());
        int seats = Integer.parseInt(seatsReserveField.getText());
        Timestamp timestamp = new java.sql.Timestamp(Calendar.getInstance().getTime().getTime());

        ArrayList<Rooms> possibleRooms = RoomsMethods.getValidRoom(seats);
        ArrayList<String> roomsReserved = ReservationsMethods.getRoomsReservedByDate(date);

        for (Rooms room : possibleRooms) {
            if (!roomsReserved.contains(room.getName())) {
                Reservations entry = new Reservations(faculty, room.getName(), date, seats, timestamp);
                ReservationsMethods.addReservation(entry);
                reserveRoomStatusLabel.setText("Room " + room.getName() + " reserved for " + faculty + ".");
                return;
            }
        }
        Waitlist entry = new Waitlist(faculty, date, seats, timestamp);
        WaitlistMethods.addToWaitlist(entry);
        reserveRoomStatusLabel.setText("Room already booked. You are on the waitlist");
    }//GEN-LAST:event_submitReservationButtonActionPerformed

    private void addFacultyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFacultyButtonActionPerformed
        // Add the faculty to the faculty table.
        String name = addFaculty.getText();
        Faculty.addFaculty(name);
        addFacultyStatusLabel.setText(name + " has been added to Faculty.");

        // run the reservation faculty combo box.
        runFacultyComboBoxes();
    }//GEN-LAST:event_addFacultyButtonActionPerformed

    private void nameReserveComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameReserveComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameReserveComboActionPerformed

    private void cancelReserveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelReserveButtonActionPerformed
        // TODO add your handling code here:
        String out2 = "";
        String name = cancelNameCombo.getSelectedItem().toString();
        String date = cancelDateCombo.getSelectedItem().toString();
        
        ReservationsMethods.deleteReservation(name, date);
        out2 = out2.concat(name + "'" +"s" + " reservation on " + date+ " has been removed.\n");
        
        ArrayList<Waitlist> wl2= WaitlistMethods.getWaitlist();
        for (Waitlist obj : wl2){
            int chairs2 = obj.getSeats();
            Date date3 = obj.getDate();
            String faculty3 = obj.getFaculty();
            Timestamp timestamp3 = obj.getCurrentTimestamp();
            
            ArrayList<Rooms> possibleRooms2 = RoomsMethods.getValidRoom(chairs2);
            ArrayList<String> roomsReserved2 = ReservationsMethods.getRoomsReservedByDate(date3);
            
            for (Rooms room : possibleRooms2) {
            if (!roomsReserved2.contains(room.getName())) {
                Reservations entry = new Reservations(faculty3, room.getName(), date3, chairs2, timestamp3);
                ReservationsMethods.addReservation(entry);
                WaitlistMethods.deleteWaitlistEntry(faculty3, date3);
                out2 = out2.concat("\n"+faculty3 + " has been removed from the waitlist and given room " + room.getName());
            }
            }
            }
        addDropStatus.setText(out2);
    }//GEN-LAST:event_cancelReserveButtonActionPerformed

    private void addDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addDateActionPerformed

    private void addFacultyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFacultyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addFacultyActionPerformed

    private void addRoomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRoomButtonActionPerformed
        // TODO add your handling code here:
        String name = roomNo.getText();
        String output2 ="";
        int seats = Integer.parseInt(seatsNo.getText());
        
        RoomsMethods.addRoom(name, seats);
        
        output2 = output2.concat("Room " +name+"  with "+seats+ " seats has been added\n");
        
        
        ArrayList<Waitlist> wl1= WaitlistMethods.getWaitlist();
        for (Waitlist obj : wl1){
            int chairs5 = obj.getSeats();
            Date date5 = obj.getDate();
            String faculty5 = obj.getFaculty();
            Timestamp timestamp5 = obj.getCurrentTimestamp();
            
            ArrayList<Rooms> possibleRooms1 = RoomsMethods.getValidRoom(chairs5);
            ArrayList<String> roomsReserved1 = ReservationsMethods.getRoomsReservedByDate(date5);
            
            for (Rooms room : possibleRooms1) {
            if (!roomsReserved1.contains(room.getName())) {
                Reservations entry = new Reservations(faculty5, room.getName(), date5, chairs5, timestamp5);
                ReservationsMethods.addReservation(entry);
                
                WaitlistMethods.deleteWaitlistEntry(faculty5, date5);
                
            }
            output2 = output2.concat("\n"+faculty5 + "has been removed from the waitlist");
            }
            }
        addDropStatus.setText(output2);
        runRoomComboBoxes();
    }//GEN-LAST:event_addRoomButtonActionPerformed

    private void roomNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomNoActionPerformed

    private void cancelNameComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelNameComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelNameComboActionPerformed

    private void dropRoomComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropRoomComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dropRoomComboActionPerformed

    private void dropRoomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropRoomButtonActionPerformed
        // TODO add your handling code here:
        String roomNos = dropRoomCombo.getSelectedItem().toString();
        String output = "";
        
        ArrayList<Reservations> reserve3 = ReservationsMethods.getReservationsByRoom(roomNos);
        
        RoomsMethods.dropRoom(roomNos);
        ReservationsMethods.deleteReservationByRoom(roomNos);
        output = output.concat("Room " + roomNos  + " has been dropped.\n");
        
        for (Reservations obj : reserve3){
            
            int chairs = obj.getSeats();
            Date date2 = obj.getDate();
            String faculty2 = obj.getFaculty();
            Timestamp timestamp2 = obj.getCurrentTimestamp();
            ArrayList<Rooms> possibleRooms1 = RoomsMethods.getValidRoom(chairs);
            ArrayList<String> roomsReserved1 = ReservationsMethods.getRoomsReservedByDate(date2);
            
            for (Rooms room : possibleRooms1) {
            if (!roomsReserved1.contains(room.getName())) {
                Reservations entry = new Reservations(faculty2, room.getName(), date2, chairs, timestamp2);
                ReservationsMethods.addReservation(entry);
                
                output = output.concat(faculty2 + " has been moved to room " + room.getName() +".\n");
               
            }  
            
            }
            Waitlist entry = new Waitlist(faculty2, date2, chairs, timestamp2);
                WaitlistMethods.addToWaitlist(entry);
                output = output.concat(faculty2 + " has been put on the waitlist." + "\n"); 
        }
        addDropStatus.setText(output);
        runRoomComboBoxes();
    }//GEN-LAST:event_dropRoomButtonActionPerformed

    private void addDateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDateButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addDateButtonActionPerformed

    private void dateReserveComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateReserveComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateReserveComboActionPerformed

    private void checkByButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkByButtonActionPerformed
        // TODO add your handling code here:
        String nameF = checkByCombo.getSelectedItem().toString();
        ArrayList<Reservations> r = ReservationsMethods.getReservationsByFaculty(nameF);
        ArrayList<Waitlist> w = WaitlistMethods.getWaitlistByFaculty(nameF);
        
        if(r.isEmpty() && w.isEmpty()){
            checkStatusByText.setText("No record in reservation and waitlist");
        }
        
        else{
           String out = "";
            out = out.concat("\nRESERVED STATUSES..." +"\n");
            for (Reservations x : r){
                out = out.concat("\n" + x.getRoom() + "  |  "+ x.getDate().toString()+"\n");
            }

            out = out.concat("\n\nWAITLIST STATUSES..." +"\n");
            for (Waitlist y : w){
                out = out.concat("\n Date: " + y.getDate().toString() +"\n");
            } 
            
            checkStatusByText.setText(out);
        }
        
        
        
        
        
        
        
    }//GEN-LAST:event_checkByButtonActionPerformed

    public void runDateComboBoxes() {
        dateReserveCombo.setModel(new javax.swing.DefaultComboBoxModel(Dates.getAllDates().toArray()));
        dateCheckCombo.setModel(new javax.swing.DefaultComboBoxModel(Dates.getAllDates().toArray()));
        cancelDateCombo.setModel(new javax.swing.DefaultComboBoxModel(Dates.getAllDates().toArray()));
    }
    
    public void runRoomComboBoxes() {
        dropRoomCombo.setModel(new javax.swing.DefaultComboBoxModel(RoomsMethods.getRoomsList().toArray()));
    }
    
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RoomSchedulerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RoomSchedulerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RoomSchedulerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RoomSchedulerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new RoomSchedulerFrame().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addDate;
    private javax.swing.JButton addDateButton;
    private javax.swing.JTextArea addDropStatus;
    private javax.swing.JTextField addFaculty;
    private javax.swing.JButton addFacultyButton;
    private javax.swing.JLabel addFacultyStatusLabel;
    private javax.swing.JButton addRoomButton;
    private javax.swing.JComboBox<String> cancelDateCombo;
    private javax.swing.JComboBox<String> cancelNameCombo;
    private javax.swing.JButton cancelReserveButton;
    private javax.swing.JButton checkByButton;
    private javax.swing.JComboBox<String> checkByCombo;
    private javax.swing.JTextArea checkStatusByText;
    private javax.swing.JButton dateCheck;
    private javax.swing.JComboBox<String> dateCheckCombo;
    private javax.swing.JComboBox<String> dateReserveCombo;
    private javax.swing.JButton dropRoomButton;
    private javax.swing.JComboBox<String> dropRoomCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JComboBox<String> nameReserveCombo;
    private javax.swing.JLabel reservationStatusDateJLabel;
    private javax.swing.JTextField reserveRoomStatusLabel;
    private javax.swing.JLabel reserveStatusLabel;
    private javax.swing.JTextField roomNo;
    private javax.swing.JTextField seatsNo;
    private javax.swing.JTextField seatsReserveField;
    private javax.swing.JTextArea statusReservation;
    private javax.swing.JTextArea statusWaitlist;
    private javax.swing.JButton submitReservationButton;
    private javax.swing.JButton waitlistCheck;
    private javax.swing.JTabbedPane waitlistPanel;
    // End of variables declaration//GEN-END:variables
}
